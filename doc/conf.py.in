# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

import datetime
import glob
import os
import re
import sys

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
sys.path.insert(0, os.path.abspath('_extensions'))

# -- Project information -----------------------------------------------------

source_suffix = '.rst'
master_doc = 'index'
pygments_style = 'sphinxcontrib.moderncmakedomain.colors.CMakeTemplateStyle'
language = 'en'
primary_domain = 'cmake'
highlight_language = 'none'

project = '@PROJ_NAME@'
copyright_start = '@PROJ_COPYRIGHT_START@'
copyright_current = datetime.date.today().year
copyright = '{0}, @PROJ_COPYRIGHT_OWNER@'.format\
            (copyright_current if
             not copyright_start or copyright_start == copyright_current else
             '{0}--{1}'.format(copyright_start, copyright_current))
author = '@PROJ_AUTHORS@'.replace(';', ', ') or None

# The full version, including alpha/beta/rc tags
release = '@PROJ_RELEASE@'

# Major.minor
version = '@PROJ_VERSION@'
cmake_version = '@CMAKE_MAJOR_VERSION@.@CMAKE_MINOR_VERSION@'

# -- General configuration ---------------------------------------------------

# Diagnostic options.
suppress_warnings = '@PROJ_SUPPRESS_WARNINGS@'.split(';') or None

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.duration',
    'sphinx.ext.extlinks',
    'sphinx.ext.githubpages',
    'sphinx.ext.graphviz',
    'sphinx.ext.ifconfig',
    'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    'sphinx.ext.viewcode',
    'sphinxcontrib.htmlhelp',
    'sphinxcontrib.moderncmakedomain'
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['@CMAKE_CURRENT_SOURCE_DIR@/templates']

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []

# Other common options.
manpages_url = 'https://man7.org/linux/man-pages/man{section}/{page}.{section}.html'
smartquotes = True
smartquotes_action = 'qDe' # quotes, en- and em-dashes, and ellipses.

# -- U**X man-page output ----------------------------------------------------
cmake_manuals = sorted(glob.glob(r'@CMAKE_CURRENT_SOURCE_DIR@/manual/*.rst'))
cmake_manual_description = re.compile('^\.\. cmake-manual-description:(.*)$')
man_make_section_directory = True
man_pages = [] # Populated below.
man_show_urls = False
for fpath in cmake_manuals:
    try:
        name, sec, rst = os.path.basename(fpath).rsplit('.', 2)
        desc = None
        f = open(fpath, 'r')
        for l in f:
            m = cmake_manual_description.match(l)
            if m:
                desc = m.group(1).strip()
                break
        f.close()
        if desc:
            man_pages.append(('manual/%s.%s' % (name, sec),
                              name, desc, [], int(sec)))
        else:
            sys.stderr.write("ERROR: No cmake-manual-description in '%s'\n" % fpath)
    except Exception as e:
        raise
#        sys.stderr.write("ERROR: %s\n" % str(e))

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
#html_theme = 'alabaster'
html_title = '{0} {1} Documentation'.format(project, release)
html_short_title = '{0} Documentation'.format(release)
html_favicon = '@CMAKE_CURRENT_SOURCE_DIR@/static/cetmodules-favicon.ico'

html_show_sourcelink = True
html_style='cetmodules.css'
html_theme = 'default'
html_theme_options = {
    'bgcolor':          '#ffffff',
    'codebgcolor':      '#eeeeee',
    'codetextcolor':    '#333333',
    'footerbgcolor':    '#00182d',
    'footertextcolor':  '#ffffff',
    'headbgcolor':      '#f2f2f2',
    'headlinkcolor':    '#3d8ff2',
    'headtextcolor':    '#003564',
    'linkcolor':        '#2b63a8',
    'relbarbgcolor':    '#00529b',
    'relbarlinkcolor':  '#ffffff',
    'relbartextcolor':  '#ffffff',
    'sidebarbgcolor':   '#e4ece8',
    'sidebarbtncolor':  '#00a94f',
    'sidebarlinkcolor': '#00a94f',
    'sidebartextcolor': '#333333',
    'textcolor':        '#444444',
    'visitedlinkcolor': '#2b63a8',
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['@CMAKE_CURRENT_SOURCE_DIR@/static']

# External cross-references.
intersphinx_mapping \
    = { 'cmake-ref-current':
        ('https://cmake.org/cmake/help/v{0}/'.format(cmake_version), None),
        'cmake-ref-latest': ('https://cmake.org/cmake/help/latest/', None)
    }
